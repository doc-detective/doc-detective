# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish NPM package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node:
          - 18
          - 20
          - 22
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  # Test downstream consumers of the package
  test-github-action:
    name: Test GitHub Action
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: doc-detective/github-action@latest
        id: dd
        with:
          config: ./test/artifacts/config.json
          input: ./test/artifacts/doc-content.md
          exit_on_fail: "true"

  build-docker-image:
    name: Build Docker Image
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get package version
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Trigger GitHub Action in docker-image repo
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DOCKER_IMAGE_REPO_PAT }}" \
               -H "Accept: application/vnd.github.everest-preview+json" \
               "https://api.github.com/repos/doc-detective/docker-image/dispatches" \
               -d '{ "event_type": "build-push", "client_payload": { "version": "${{ env.VERSION }}", "additional_info": "triggered from npm-publish workflow" } }'
