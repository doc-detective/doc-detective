# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node: 
          - 18
          - 20
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          # Cache key uses the contents of `package-lock.json` to identify unique cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
          path: |
            node_modules
          
      - run: npm ci

      - run: npm test

      # If branch is `rc`, update version to append `rc` and a UUID, then publish to npm, run npx commands, then unpublish npm package
      - name: Publish, install, and unpublish package
        if: github.event.pull_request.base.ref == 'rc'
        run: |
          npm version --no-git-tag-version prerelease --preid=rc-$(uuidgen) --force
          npm publish --tag rc-${{ matrix.node }}-${{ matrix.os }}
          npm -g i doc-detective@rc
          npm unpublish doc-detective@rc-${{ matrix.node }}-${{ matrix.os }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Run npx commands
        if: github.event.pull_request.base.ref == 'rc'
        run: |
          cd ..
          npx doc-detective runCoverage -c doc-detective/test/artifacts/config.json -i doc-detective/test/artifacts/doc-content.md -o .
          npx doc-detective runTests -c doc-detective/test/artifacts/config.json -i doc-detective/test/artifacts -o .
          ls
